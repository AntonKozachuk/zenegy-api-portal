openapi: 3.0.1
info:
  title: Indigo API
  version: v1.0
  contact:
    email: jovan@zenegy
paths:
  '/api/v{version}/self':
    get:
      tags:
        - ApiRoot
      parameters:
        - name: tenantUid
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/list':
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/actions':
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/{accountUid}':
    get:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accountUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accountUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accountUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/{accountUid}/booked-entries':
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accountUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/totals':
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts':
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/delete':
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.DeleteAccountsRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.DeleteAccountsRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.DeleteAccountsRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.DeleteAccountsRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/delete-all':
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/{accountUid}/vat-dimensions':
    get:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accountUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/schemas':
    get:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/settings':
    get:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/schemas/{schemaTemplateUid}':
    put:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: schemaTemplateUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: schemaTemplateUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/templates':
    get:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/accounts/templates/{templateUid}':
    get:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: templateUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: templateUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest,
                Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral,
                PublicKeyToken=null]]
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ChartOfAccounts
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: templateUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/contact-persons/list':
    post:
      tags:
        - ContactPersons
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/contact-persons/{contactPersonUid}':
    get:
      tags:
        - ContactPersons
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: contactPersonUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - ContactPersons
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: contactPersonUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - ContactPersons
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: contactPersonUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/contact-persons':
    post:
      tags:
        - ContactPersons
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ContactPersons.Models.CreateContactPersonRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ContactPersons.Models.CreateContactPersonRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ContactPersons.Models.CreateContactPersonRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.ContactPersons.Models.CreateContactPersonRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/currencies':
    get:
      tags:
        - Currencies
      parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-categories/list':
    post:
      tags:
        - CustomerCategories
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-categories':
    post:
      tags:
        - CustomerCategories
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerCategoryRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerCategoryRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerCategoryRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerCategoryRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-categories/{categoryUid}/assign':
    patch:
      tags:
        - CustomerCategories
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: categoryUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignCategoryToCustomersRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignCategoryToCustomersRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignCategoryToCustomersRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignCategoryToCustomersRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-finance-codes/list':
    post:
      tags:
        - CustomerFinanceCodes
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-finance-codes':
    post:
      tags:
        - CustomerFinanceCodes
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerFinanceCodeRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerFinanceCodeRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerFinanceCodeRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerFinanceCodeRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-groups/list':
    post:
      tags:
        - CustomerGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-groups':
    post:
      tags:
        - CustomerGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerGroupRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerGroupRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerGroupRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerGroupRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customer-groups/{groupUid}/assign':
    patch:
      tags:
        - CustomerGroups
      parameters:
        - name: tenantuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: groupUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignGroupToCustomersRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignGroupToCustomersRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignGroupToCustomersRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.AssignGroupToCustomersRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers/list':
    post:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers/{customerUid}':
    get:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: customerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: customerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: customerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers/{identificationNumber}':
    get:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: identificationNumber
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers/{customerUid}/invoices':
    get:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: customerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers/look-up':
    get:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: countryCode
          in: query
          schema:
            type: string
            nullable: true
        - name: search
          in: query
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers/look-up/{identificationNumber}':
    get:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: countryCode
          in: query
          schema:
            type: string
            nullable: true
        - name: identificationNumber
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers/totals':
    post:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/customers':
    post:
      tags:
        - Customers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Customers.Models.CreateCustomerRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/dimensions/list':
    post:
      tags:
        - Dimensions
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/dimensions/{dimensionType}/list':
    post:
      tags:
        - Dimensions
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: dimensionType
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/dimensions/{dimensionType}/totals':
    post:
      tags:
        - Dimensions
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: dimensionType
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/dimensions/{dimensionType}/values':
    post:
      tags:
        - Dimensions
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: dimensionType
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.CreateDimensionRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.CreateDimensionRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.CreateDimensionRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.CreateDimensionRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/dimensions/values/{dimensionValueUid}':
    patch:
      tags:
        - Dimensions
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: dimensionValueUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/dimensions/status':
    put:
      tags:
        - Dimensions
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.UpdateDimensionsStatusRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.UpdateDimensionsStatusRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.UpdateDimensionsStatusRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Dimensions.Models.UpdateDimensionsStatusRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/expenses/list':
    post:
      tags:
        - Expenses
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years/list':
    post:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years/totals':
    post:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years/{fiscalYearUid}':
    get:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: fiscalYearUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years':
    post:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CreateFiscalYearRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CreateFiscalYearRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CreateFiscalYearRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CreateFiscalYearRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years/close':
    post:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalYearsRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalYearsRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalYearsRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalYearsRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years/{fiscalYearUid}/close':
    post:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: fiscalYearUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalPeriodsRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalPeriodsRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalPeriodsRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalPeriodsRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years/delete':
    post:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.DeleteFiscalYearsRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.DeleteFiscalYearsRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.DeleteFiscalYearsRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.FiscalYears.Models.DeleteFiscalYearsRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/fiscal-years/actions':
    post:
      tags:
        - FiscalYears
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/list':
    post:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/{invoiceUid}':
    get:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices':
    post:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.CreateInvoiceRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.CreateInvoiceRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.CreateInvoiceRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.CreateInvoiceRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/{invoiceUid}/post-and-send':
    patch:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/{invoiceUid}/send':
    patch:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/{invoiceUid}/attachments':
    post:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/{invoiceUid}/attachments/{attachmentUid}':
    get:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: attachmentUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: attachmentUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/{invoiceUid}/attachments/metadata':
    get:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: invoiceUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/invoices/totals':
    post:
      tags:
        - Invoices
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/list':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/{ledgerEntryUid}':
    get:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerEntryUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerEntryUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/totals':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{accountUid}/account-entries/totals':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accountUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/export':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.ExportLedgerEntriesRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.ExportLedgerEntriesRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.ExportLedgerEntriesRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.ExportLedgerEntriesRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CreateLedgerEntryRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CreateLedgerEntryRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CreateLedgerEntryRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CreateLedgerEntryRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/book':
    patch:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.BookLedgerEntriesRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.BookLedgerEntriesRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.BookLedgerEntriesRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.BookLedgerEntriesRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/check-expenses':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CheckLedgerEntriesRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CheckLedgerEntriesRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CheckLedgerEntriesRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.CheckLedgerEntriesRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/book-all':
    patch:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/booked/{ledgerEntryUid}':
    put:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerEntryUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.UpdateBookedLedgerEntryRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.UpdateBookedLedgerEntryRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.UpdateBookedLedgerEntryRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.UpdateBookedLedgerEntryRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/delete':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntriesRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntriesRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntriesRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntriesRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/delete-all':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/{ledgerEntryUid}/invoices':
    put:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerEntryUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.LedgerEntryInvoiceRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.LedgerEntryInvoiceRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.LedgerEntryInvoiceRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.LedgerEntryInvoiceRequest
      responses:
        '200':
          description: Success
    get:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerEntryUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/entries/{ledgerEntryUid}/invoices/delete-page':
    post:
      tags:
        - LedgerEntries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerEntryUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntryInvoicePageRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntryInvoicePageRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntryInvoicePageRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntryInvoicePageRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/list':
    post:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/totals':
    post:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}':
    get:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/number-series':
    get:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/next-sequence-id':
    get:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers':
    post:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.CreateLedgerRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.CreateLedgerRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.CreateLedgerRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.CreateLedgerRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/ledgers/{ledgerUid}/daybook-settings':
    patch:
      tags:
        - Ledgers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ledgerUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.UpdateDaybookSettingsRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.UpdateDaybookSettingsRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.UpdateDaybookSettingsRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Ledgers.Models.UpdateDaybookSettingsRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/notes':
    post:
      tags:
        - Notes
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CreateNoteRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CreateNoteRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CreateNoteRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CreateNoteRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/notes/{noteUid}/comments':
    patch:
      tags:
        - Notes
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: noteUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CommentedNoteRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CommentedNoteRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CommentedNoteRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.CommentedNoteRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/notes/{noteUid}/attachments':
    patch:
      tags:
        - Notes
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: noteUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.NoteAttachmentRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.NoteAttachmentRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.NoteAttachmentRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Notes.Models.NoteAttachmentRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/number-series/list':
    post:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/number-series/{numberSeriesUid}':
    get:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: numberSeriesUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: numberSeriesUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.UpdateNumberSeriesRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.UpdateNumberSeriesRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.UpdateNumberSeriesRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.UpdateNumberSeriesRequest
      responses:
        '200':
          description: Success
    patch:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: numberSeriesUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: numberSeriesUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/number-series/{numberSeriesType}':
    get:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: numberSeriesType
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/number-series/totals':
    post:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/number-series':
    post:
      tags:
        - NumberSeries
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.CreateNumberSeriesRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.CreateNumberSeriesRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.CreateNumberSeriesRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.CreateNumberSeriesRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/payment-terms':
    get:
      tags:
        - PaymentTerms
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      tags:
        - PaymentTerms
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.CreatePaymentTermRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.CreatePaymentTermRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.CreatePaymentTermRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.CreatePaymentTermRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/payment-terms/{paymentTermUid}':
    delete:
      tags:
        - PaymentTerms
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentTermUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - PaymentTerms
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentTermUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.UpdatePaymentTermRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.UpdatePaymentTermRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.UpdatePaymentTermRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.PaymentTerms.Models.UpdatePaymentTermRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/product-finance-codes/list':
    post:
      tags:
        - ProductFinanceCodes
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/product-finance-codes':
    post:
      tags:
        - ProductFinanceCodes
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductFinanceCodeRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductFinanceCodeRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductFinanceCodeRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductFinanceCodeRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/products/list':
    post:
      tags:
        - Products
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/products':
    post:
      tags:
        - Products
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.CreateProductRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/products/{productUid}':
    put:
      tags:
        - Products
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: productUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.UpdateProductRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.UpdateProductRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.UpdateProductRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Products.Models.UpdateProductRequest
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Products
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: productUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Products
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: productUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/sections':
    get:
      tags:
        - Sections
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/suppliers/list':
    post:
      tags:
        - Suppliers
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/supplier-vat-zones/list':
    post:
      tags:
        - SupplierVatZones
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/supplier-vat-zones/{supplierVatZoneUid}':
    get:
      tags:
        - SupplierVatZones
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: supplierVatZoneUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/supplier-vat-zones':
    post:
      tags:
        - SupplierVatZones
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SupplierVatZone.Models.CreateSupplierVatZoneRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SupplierVatZone.Models.CreateSupplierVatZoneRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SupplierVatZone.Models.CreateSupplierVatZoneRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.SupplierVatZone.Models.CreateSupplierVatZoneRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/currencies':
    get:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateTenantCurrencyRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateTenantCurrencyRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateTenantCurrencyRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateTenantCurrencyRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/currencies/list':
    post:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/currencies/{tenantCurrencyUid}':
    get:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: tenantCurrencyUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: tenantCurrencyUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/currencies/{currencyUid}/exchange-rate':
    post:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: currencyUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateExchangeRateRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateExchangeRateRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateExchangeRateRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.TenantCurrencies.Models.CreateExchangeRateRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/currencies/{currencyUid}':
    patch:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: currencyUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/currencies/totals':
    post:
      tags:
        - TenantCurrencies
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants':
    post:
      tags:
        - Tenants
      parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.CreateTenantRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.CreateTenantRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.CreateTenantRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.CreateTenantRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}':
    get:
      tags:
        - Tenants
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/settings':
    patch:
      tags:
        - Tenants
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.UpdateTenantSettingsRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.UpdateTenantSettingsRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.UpdateTenantSettingsRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Tenants.Models.UpdateTenantSettingsRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/units':
    get:
      tags:
        - Units
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      tags:
        - Units
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.CreateUnitRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.CreateUnitRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.CreateUnitRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.CreateUnitRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/units/{unitUid}':
    patch:
      tags:
        - Units
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: unitUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.UpdateUnitRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.UpdateUnitRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.UpdateUnitRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.Units.Models.UpdateUnitRequest
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Units
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: unitUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-dimensions':
    get:
      tags:
        - VatDimensions
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/{vatGroupUid}':
    get:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: vatGroupUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    patch:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: vatGroupUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          text/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.Operation
              nullable: true
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/list':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/actions':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/totals':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalsRequest'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/{vatGroupUid}/vat-percentage':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: vatGroupUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatPercentageRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatPercentageRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatPercentageRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatPercentageRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/{vatGroupUid}/vat-reduction':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: vatGroupUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatReductionRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatReductionRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatReductionRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatReductionRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/delete':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
              nullable: true
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-groups/delete-all':
    post:
      tags:
        - VatGroups
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-reports':
    get:
      tags:
        - VatReports
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      tags:
        - VatReports
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatReport.Models.VatReport.CreateVatReportRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatReport.Models.VatReport.CreateVatReportRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatReport.Models.VatReport.CreateVatReportRequest
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/Indigo.Core.Contracts.VatReport.Models.VatReport.CreateVatReportRequest
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-reports/{vatReportUid}':
    get:
      tags:
        - VatReports
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: vatReportUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/v{version}/tenants/{tenantUid}/vat-reports/{vatReportUid}/location':
    get:
      tags:
        - VatReports
      parameters:
        - name: tenantUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: vatReportUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
components:
  schemas:
    Indigo.Common.Utils.Contracts.FilterRequest:
      type: object
      properties:
        filterType:
          type: string
          nullable: true
        properties:
          type: array
          items:
            type: string
          nullable: true
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    Indigo.Common.Utils.Contracts.AppFilter:
      type: object
      properties:
        sortBy:
          type: string
          nullable: true
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.FilterRequest'
          nullable: true
        continuationToken:
          type: string
          nullable: true
        pageSize:
          type: integer
          format: int32
      additionalProperties: false
    Microsoft.AspNetCore.JsonPatch.Operations.OperationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    Microsoft.AspNetCore.JsonPatch.Operations.Operation:
      type: object
      properties:
        operationType:
          $ref: >-
            #/components/schemas/Microsoft.AspNetCore.JsonPatch.Operations.OperationType
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    Indigo.Common.Utils.Contracts.TotalRequest:
      required:
        - propertyName
        - totalType
      type: object
      properties:
        propertyName:
          type: string
        totalType:
          type: string
      additionalProperties: false
    Indigo.Common.Utils.Contracts.TotalsRequest:
      type: object
      properties:
        appFilter:
          $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
        totalRequests:
          type: array
          items:
            $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.TotalRequest'
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.ChartOfAccounts.Models.AccountVatGroupRequest:
      type: object
      properties:
        vatGroupUid:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        accountType:
          type: string
          nullable: true
        vatGroup:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.AccountVatGroupRequest
      additionalProperties: false
    Indigo.Core.Contracts.ChartOfAccounts.Models.DeleteAccountsRequest:
      required:
        - accountUids
      type: object
      properties:
        accountUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.ChartOfAccounts.Models.AccountSchemaTemplateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        appliedOnTenants:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        accountTemplates:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    'Indigo.Core.Contracts.SchemaTemplates.Models.TemplateRequest`1[[Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest, Indigo.Core.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]':
      type: object
      properties:
        name:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: >-
              #/components/schemas/Indigo.Core.Contracts.ChartOfAccounts.Models.CreateAccountRequest
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.ContactPersons.Models.CreateContactPersonRequest:
      required:
        - email
        - name
        - phone
      type: object
      properties:
        name:
          type: string
        prefix:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        phone:
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CreateCustomerCategoryRequest:
      required:
        - code
        - name
      type: object
      properties:
        name:
          type: string
        code:
          type: string
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.AssignCategoryToCustomersRequest:
      required:
        - customerUids
      type: object
      properties:
        customerUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CreateCustomerFinanceCodeRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CreateCustomerGroupRequest:
      required:
        - code
        - name
      type: object
      properties:
        name:
          type: string
        code:
          type: string
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.AssignGroupToCustomersRequest:
      required:
        - customerUids
      type: object
      properties:
        customerUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CustomerUkRequest:
      type: object
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CustomerDkRequest:
      type: object
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CustomerInvoicingInfoRequest:
      required:
        - currencyUid
        - paymentTermUid
        - vatZone
      type: object
      properties:
        attention:
          type: string
          nullable: true
        invoiceMail:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        creditMax:
          type: number
          format: double
        vatZone:
          type: string
        paymentType:
          type: string
          nullable: true
        currencyUid:
          type: string
          format: uuid
        paymentTermUid:
          type: string
          format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CustomerContactInfoRequest:
      required:
        - contactPersons
      type: object
      properties:
        phone:
          type: string
          nullable: true
        webpage:
          type: string
          nullable: true
        email:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        contactPersons:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CustomerDeliveryLocationRequest:
      required:
        - address
        - name
      type: object
      properties:
        name:
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        attention:
          type: string
          nullable: true
        theirReference:
          type: string
          nullable: true
        ourReference:
          type: string
          nullable: true
        address:
          type: string
        addressLatitude:
          type: number
          format: double
        addressLongitude:
          type: number
          format: double
      additionalProperties: false
    Indigo.Core.Contracts.Customers.Models.CreateCustomerRequest:
      required:
        - customerType
        - deliveryLocations
        - name
      type: object
      properties:
        customerNumber:
          type: string
          nullable: true
        identificationNumber:
          type: string
          nullable: true
        name:
          type: string
        address:
          type: string
          nullable: true
        language:
          maxLength: 2
          minLength: 2
          type: string
          nullable: true
        eanNumber:
          maxLength: 13
          minLength: 0
          type: string
          nullable: true
        customerUk:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.Customers.Models.CustomerUkRequest
        customerDk:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.Customers.Models.CustomerDkRequest
        invoicingInfo:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.Customers.Models.CustomerInvoicingInfoRequest
        contactInfo:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.Customers.Models.CustomerContactInfoRequest
        deliveryLocations:
          type: array
          items:
            $ref: >-
              #/components/schemas/Indigo.Core.Contracts.Customers.Models.CustomerDeliveryLocationRequest
        customerType:
          type: string
        countryOfOrigin:
          maxLength: 2
          minLength: 2
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Dimensions.Models.CreateDimensionRequest:
      required:
        - key
      type: object
      properties:
        key:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Dimensions.Models.UpdateDimensionsStatusRequest:
      type: object
      properties:
        dimensionUids:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        dimensionStatus:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.FiscalYears.Models.CreateFiscalYearRequest:
      type: object
      properties:
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
      additionalProperties: false
    Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalYearsRequest:
      required:
        - fiscalYearUids
      type: object
      properties:
        fiscalYearUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.FiscalYears.Models.CloseFiscalPeriodsRequest:
      required:
        - fiscalPeriodUids
      type: object
      properties:
        fiscalPeriodUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.FiscalYears.Models.DeleteFiscalYearsRequest:
      required:
        - fiscalYearUids
      type: object
      properties:
        fiscalYearUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Invoices.Models.CreateInvoiceRequest:
      type: object
      properties:
        documentDate:
          type: string
          format: date-time
        customerUid:
          type: string
          format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Invoices.Models.SendInvoiceRequest:
      type: object
      properties:
        sendVia:
          type: string
          nullable: true
        includeAs:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        recipients:
          type: array
          items:
            type: string
          nullable: true
        ccRecipients:
          type: array
          items:
            type: string
          nullable: true
        subject:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.ExportLedgerEntriesRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
        isExportAll:
          type: boolean
        selectedEntries:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        exportedColumns:
          type: array
          items:
            type: string
          nullable: true
        language:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.CreateLedgerEntryRequest:
      type: object
      properties:
        isNewSequenceRequested:
          type: boolean
        entryUid:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.BookLedgerEntriesRequest:
      required:
        - ledgerEntryUids
      type: object
      properties:
        ledgerEntryUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.CheckLedgerEntriesRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Indigo.Common.Utils.Contracts.AppFilter'
        isCheckAll:
          type: boolean
        selectedEntries:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.UpdateBookedLedgerEntryRequest:
      type: object
      properties:
        employeeDimensionUid:
          type: string
          format: uuid
          nullable: true
        departmentDimensionUid:
          type: string
          format: uuid
          nullable: true
        costCenterDimensionUid:
          type: string
          format: uuid
          nullable: true
        profitCenterDimensionUid:
          type: string
          format: uuid
          nullable: true
        projectDimensionUid:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntriesRequest:
      required:
        - ledgerEntryUids
      type: object
      properties:
        ledgerEntryUids:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Common.Models.FileRequest:
      type: object
      properties:
        content:
          type: string
          format: byte
          nullable: true
        fileName:
          type: string
          nullable: true
        contentType:
          type: string
          nullable: true
        size:
          type: integer
          format: int64
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.LedgerEntryInvoiceRequest:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: >-
              #/components/schemas/Indigo.Core.Contracts.Common.Models.FileRequest
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.LedgerEntries.Models.DeleteLedgerEntryInvoicePageRequest:
      type: object
      properties:
        pageNumber:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        isMissingReceipt:
          type: boolean
      additionalProperties: false
    Indigo.Core.Contracts.NumberSeries.Models.CreateNumberSeriesRequest:
      required:
        - description
        - mask
        - numberSeriesType
      type: object
      properties:
        numberSeriesType:
          type: string
        mask:
          type: string
        description:
          type: string
        startingNumber:
          type: integer
          format: int64
          nullable: true
        currentNumber:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Ledgers.Models.CreateLedgerRequest:
      required:
        - ledgerType
        - name
      type: object
      properties:
        name:
          type: string
        ledgerType:
          type: string
        numberSeries:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.CreateNumberSeriesRequest
        allowedTypes:
          type: array
          items:
            type: string
          nullable: true
        defaultType:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.NumberSeries.Models.UpdateLedgerNumberSeriesRequest:
      type: object
      properties:
        mask:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        shortCode:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Ledgers.Models.UpdateDaybookSettingsRequest:
      type: object
      properties:
        numberSeries:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.NumberSeries.Models.UpdateLedgerNumberSeriesRequest
      additionalProperties: false
    Indigo.Core.Contracts.Notes.Models.CreateNoteRequest:
      type: object
      properties:
        entityUid:
          type: string
          format: uuid
        reminderDueBy:
          type: string
          format: date-time
          nullable: true
        noteTitle:
          type: string
          nullable: true
        assignedToUid:
          type: string
          format: uuid
          nullable: true
        followers:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Notes.Models.CommentedNoteRequest:
      type: object
      properties:
        comment:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Notes.Models.NoteAttachmentRequest:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.NumberSeries.Models.UpdateNumberSeriesRequest:
      type: object
      properties:
        mask:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startingNumber:
          type: integer
          format: int64
      additionalProperties: false
    Indigo.Core.Contracts.PaymentTerms.Models.CreatePaymentTermRequest:
      type: object
      properties:
        dayOfMonth:
          type: integer
          format: int32
          nullable: true
        daysBeforeDueDate:
          type: integer
          format: int32
          nullable: true
        fixedNoDays:
          type: integer
          format: int32
          nullable: true
        paymentTermType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.SharedKernel.ValueObjects.AccessType:
      type: object
      additionalProperties: false
    Indigo.Core.Contracts.PaymentTerms.Models.UpdatePaymentTermRequest:
      type: object
      properties:
        dayOfMonth:
          type: integer
          format: int32
          nullable: true
        daysBeforeDueDate:
          type: integer
          format: int32
          nullable: true
        fixedNoDays:
          type: integer
          format: int32
          nullable: true
        paymentTermType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        accessType:
          $ref: >-
            #/components/schemas/Indigo.Core.SharedKernel.ValueObjects.AccessType
      additionalProperties: false
    Indigo.Core.Contracts.Products.Models.CreateProductFinanceCodeRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
    Indigo.Core.Contracts.Products.Models.CreateProductRequest:
      required:
        - name
        - vatType
      type: object
      properties:
        name:
          type: string
        vatType:
          type: string
        identificationProductCode:
          type: string
          nullable: true
        costPriceBaseCurrency:
          maximum: 2147483647
          minimum: 0
          type: number
          format: double
        salesPriceBaseCurrency:
          maximum: 2147483647
          minimum: 0
          type: number
          format: double
        description:
          type: string
          nullable: true
        financeCodeUid:
          type: string
          format: uuid
          nullable: true
        unitUid:
          type: string
          format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Products.Models.UpdateProductRequest:
      required:
        - name
        - vatType
      type: object
      properties:
        name:
          type: string
        vatType:
          type: string
        identificationProductCode:
          type: string
          nullable: true
        costPriceBaseCurrency:
          maximum: 2147483647
          minimum: 0
          type: number
          format: double
        salesPriceBaseCurrency:
          maximum: 2147483647
          minimum: 0
          type: number
          format: double
        description:
          type: string
          nullable: true
        financeCodeUid:
          type: string
          format: uuid
          nullable: true
        unitUid:
          type: string
          format: uuid
        accessType:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.SupplierVatZone.Models.CreateSupplierVatZoneRequest:
      type: object
      properties:
        key:
          type: string
          nullable: true
        countries:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.TenantCurrencies.Models.CreateTenantCurrencyRequest:
      type: object
      properties:
        currencyCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        currencyNumber:
          type: string
          nullable: true
        exchangeRateToBase:
          type: number
          format: double
      additionalProperties: false
    Indigo.Core.Contracts.TenantCurrencies.Models.CreateExchangeRateRequest:
      type: object
      properties:
        fromDate:
          type: string
          format: date-time
          nullable: true
        toDate:
          type: string
          format: date-time
          nullable: true
        exchangeRateToBase:
          type: number
          format: double
      additionalProperties: false
    Indigo.Core.Contracts.Tenants.Models.CreateTenantRequest:
      type: object
      properties:
        tenantUid:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        ownerUserUid:
          type: string
          format: uuid
        ownerUserName:
          type: string
          nullable: true
        ownerUserEmail:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Tenants.Models.AccountSettingsRequest:
      type: object
      properties:
        gainLossAccountUid:
          type: string
          format: uuid
        bookedInvoiceAccountUid:
          type: string
          format: uuid
        bookedInvoiceAccountCashUid:
          type: string
          format: uuid
        bookedSupplierInvoiceAccountUid:
          type: string
          format: uuid
        employeeAccountReceivableUid:
          type: string
          format: uuid
        cardBankAccountUid:
          type: string
          format: uuid
      additionalProperties: false
    Indigo.Core.Contracts.Tenants.Models.UpdateTenantSettingsRequest:
      type: object
      properties:
        accountSettings:
          $ref: >-
            #/components/schemas/Indigo.Core.Contracts.Tenants.Models.AccountSettingsRequest
      additionalProperties: false
    Indigo.Core.Contracts.Units.Models.CreateUnitRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        resourceKey:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.Units.Models.UpdateUnitRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        resourceKey:
          type: string
          nullable: true
        accessType:
          type: string
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.VatRates.Models.CreateVatPercentageRequest:
      type: object
      properties:
        percentage:
          type: number
          format: double
        fromDate:
          type: string
          format: date-time
          nullable: true
        toDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.VatRates.Models.CreateVatReductionRequest:
      type: object
      properties:
        percentage:
          type: number
          format: double
        fromDate:
          type: string
          format: date-time
          nullable: true
        toDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    Indigo.Core.Contracts.VatRates.Models.CreateVatRequest:
      type: object
      properties:
        vatGroupName:
          type: string
          nullable: true
        vatGroupCode:
          type: string
          nullable: true
        vatCalculationBasis:
          type: string
          nullable: true
        fileIntoAccountUid:
          type: string
          format: uuid
          nullable: true
        vatPercentages:
          type: array
          items:
            $ref: >-
              #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatPercentageRequest
          nullable: true
        vatReductions:
          type: array
          items:
            $ref: >-
              #/components/schemas/Indigo.Core.Contracts.VatRates.Models.CreateVatReductionRequest
          nullable: true
      additionalProperties: false
    Indigo.Core.Domain.VatReport.Contracts.VatReport.VatReportType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Indigo.Core.Domain.VatReport.Contracts.VatReport.VatReportPaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Indigo.Core.Contracts.VatReport.Models.VatReport.CreateVatReportRequest:
      type: object
      properties:
        tenantUid:
          type: string
          format: uuid
        periods:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        reportType:
          $ref: >-
            #/components/schemas/Indigo.Core.Domain.VatReport.Contracts.VatReport.VatReportType
        paymentType:
          $ref: >-
            #/components/schemas/Indigo.Core.Domain.VatReport.Contracts.VatReport.VatReportPaymentType
        paymentDate:
          type: string
          format: date-time
      additionalProperties: false
