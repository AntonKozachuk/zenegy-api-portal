swagger: '2.0'
info:
  version: '1.0'
  title: /docs/1.0/zenegy-documents-api.json
paths:
  '/api/documents/companies/{companyUid}':
    get:
      tags:
        - CompanyDocuments
      operationId: GetCompanyDocumentsAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: filterPhrase
          in: query
          required: false
          type: string
        - name: uploadedTo
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
        - name: uploadedBy
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
        - name: documentVisibility
          in: query
          required: false
          type: boolean
        - name: showCompanySharedDocuments
          in: query
          required: false
          type: boolean
        - name: ContinuationTokenDecoded
          in: query
          required: false
          type: string
        - name: continuationToken
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success
    post:
      tags:
        - CompanyDocuments
      operationId: InsertCompanyDocumentAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/InsertCompanyDocumentRequest'
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/uploads':
    post:
      tags:
        - CompanyDocuments
      operationId: UploadCompanyDocumentAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  '/api/documents/{documentUid}/companies/{companyUid}':
    delete:
      tags:
        - CompanyDocuments
      operationId: DeleteCompanyDocumentAsync
      consumes: []
      produces: []
      parameters:
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
    patch:
      tags:
        - CompanyDocuments
      operationId: PatchCompanyDocumentAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/UpdateCompanyDocumentRequest'
      responses:
        '200':
          description: Success
  '/api/documents/{documentUid}/companies/{companyUid}/locations':
    get:
      tags:
        - CompanyDocuments
      operationId: GetCompanyDocumentLocationAsync
      consumes: []
      produces: []
      parameters:
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/bulks/downloads':
    get:
      tags:
        - CompanyDocuments
      operationId: BulkDownloadCompanyDocuments
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: documentUids
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/bulks/deletes':
    post:
      tags:
        - CompanyDocuments
      operationId: BulkDeleteCompanyDocumentsAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/DocumentsRequest'
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/bulks/visibility':
    patch:
      tags:
        - CompanyDocuments
      operationId: BulkPatchCompanyDocumentsVisibilityAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/DocumentVisibilityRequest'
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/users':
    get:
      tags:
        - CompanyUserDocuments
      operationId: GetCompanyDocumentsAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: filterPhrase
          in: query
          required: false
          type: string
        - name: uploadedTo
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
        - name: uploadedBy
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
        - name: documentVisibility
          in: query
          required: false
          type: boolean
        - name: showCompanySharedDocuments
          in: query
          required: false
          type: boolean
        - name: ContinuationTokenDecoded
          in: query
          required: false
          type: string
        - name: continuationToken
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success
    post:
      tags:
        - CompanyUserDocuments
      operationId: InsertCompanyDocumentAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/InsertUserDocumentRequest'
      responses:
        '200':
          description: Success
  '/api/documents/{documentUid}/companies/{companyUid}/users/locations':
    get:
      tags:
        - CompanyUserDocuments
      operationId: GetCompanyDocumentLocationAsync
      consumes: []
      produces: []
      parameters:
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/users/bulks/downloads':
    get:
      tags:
        - CompanyUserDocuments
      operationId: BulkDownloadCompanyDocuments
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: documentUids
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/users/uploads':
    post:
      tags:
        - CompanyUserDocuments
      operationId: UploadUserDocumentAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/users/bulks/deletes':
    post:
      tags:
        - CompanyUserDocuments
      operationId: BulkDeleteCompanyDocumentsAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/DocumentsRequest'
      responses:
        '200':
          description: Success
  '/api/documents/{documentUid}/companies/{companyUid}/users':
    delete:
      tags:
        - CompanyUserDocuments
      operationId: DeleteCompanyDocumentAsync
      consumes: []
      produces: []
      parameters:
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
    patch:
      tags:
        - CompanyUserDocuments
      operationId: PatchCompanyDocumentAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/UpdateUserDocumentRequest'
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/users/bulks/visibility':
    patch:
      tags:
        - CompanyUserDocuments
      operationId: BulkPatchCompanyDocumentsVisibilityAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/DocumentVisibilityRequest'
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/my':
    get:
      tags:
        - MyDocuments
      operationId: GetMyDocumentsAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: filterPhrase
          in: query
          required: false
          type: string
        - name: uploadedTo
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
        - name: uploadedBy
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
        - name: documentVisibility
          in: query
          required: false
          type: boolean
        - name: showCompanySharedDocuments
          in: query
          required: false
          type: boolean
        - name: ContinuationTokenDecoded
          in: query
          required: false
          type: string
        - name: continuationToken
          in: query
          required: false
          type: string
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success
    post:
      tags:
        - MyDocuments
      operationId: InsertMyDocumentAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/InsertMyDocumentRequest'
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/my/uploads':
    post:
      tags:
        - MyDocuments
      operationId: UploadMyDocumentAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  '/api/documents/{documentUid}/companies/{companyUid}/my':
    delete:
      tags:
        - MyDocuments
      operationId: DeleteMyDocumentAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
    patch:
      tags:
        - MyDocuments
      operationId: PatchMyDocumentAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/UpdateMyDocumentRequest'
      responses:
        '200':
          description: Success
  '/api/documents/{documentUid}/companies/{companyUid}/my/locations':
    get:
      tags:
        - MyDocuments
      operationId: GetMyDocumentLocationAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: documentUid
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/my/bulks/downloads':
    get:
      tags:
        - MyDocuments
      operationId: BulkDownloadMyDocumentsAsync
      consumes: []
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: documentUids
          in: query
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: multi
          uniqueItems: false
      responses:
        '200':
          description: Success
  '/api/documents/companies/{companyUid}/my/bulks/deletes':
    post:
      tags:
        - MyDocuments
      operationId: BulkDeleteMyDocumentsAsync
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: companyUid
          in: path
          required: true
          type: string
          format: uuid
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/DocumentsRequest'
      responses:
        '200':
          description: Success
definitions:
  InsertCompanyDocumentRequest:
    required:
      - isProtected
      - sharedWithUsers
      - uid
      - title
      - fileId
      - fileName
    type: object
    properties:
      isProtected:
        type: boolean
      sharedWithUsers:
        uniqueItems: false
        type: array
        items:
          format: uuid
          type: string
      isTemplateDocument:
        type: boolean
      uid:
        format: uuid
        type: string
      title:
        maxLength: 255
        minLength: 0
        type: string
      description:
        type: string
      fileId:
        type: string
      fileName:
        type: string
  UpdateCompanyDocumentRequest:
    required:
      - title
    type: object
    properties:
      isProtected:
        type: boolean
      sharedWithUsers:
        uniqueItems: false
        type: array
        items:
          format: uuid
          type: string
      title:
        maxLength: 255
        minLength: 0
        type: string
      description:
        type: string
  DocumentsRequest:
    required:
      - documentUids
    type: object
    properties:
      documentUids:
        uniqueItems: false
        type: array
        items:
          format: uuid
          type: string
  DocumentVisibilityRequest:
    required:
      - documentUids
    type: object
    properties:
      isAllVisible:
        type: boolean
      documentUids:
        uniqueItems: false
        type: array
        items:
          format: uuid
          type: string
  InsertUserDocumentRequest:
    required:
      - isProtected
      - uploadedToUserUid
      - sharedWithUsers
      - uid
      - title
      - fileId
      - fileName
    type: object
    properties:
      isProtected:
        type: boolean
      uploadedToUserUid:
        format: uuid
        type: string
      sharedWithUsers:
        uniqueItems: false
        type: array
        items:
          format: uuid
          type: string
      isTemplateDocument:
        type: boolean
      uid:
        format: uuid
        type: string
      title:
        maxLength: 255
        minLength: 0
        type: string
      description:
        type: string
      fileId:
        type: string
      fileName:
        type: string
  UpdateUserDocumentRequest:
    required:
      - title
    type: object
    properties:
      isProtected:
        type: boolean
      sharedWithUsers:
        uniqueItems: false
        type: array
        items:
          format: uuid
          type: string
      title:
        maxLength: 255
        minLength: 0
        type: string
      description:
        type: string
  InsertMyDocumentRequest:
    required:
      - uid
      - title
      - fileId
      - fileName
    type: object
    properties:
      uid:
        format: uuid
        type: string
      title:
        maxLength: 255
        minLength: 0
        type: string
      description:
        type: string
      fileId:
        type: string
      fileName:
        type: string
  UpdateMyDocumentRequest:
    required:
      - title
    type: object
    properties:
      title:
        maxLength: 255
        minLength: 0
        type: string
      description:
        type: string
